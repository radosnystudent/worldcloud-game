{"version":3,"sources":["constants/actions.js","actions/userActions.js","actions/gameActions.js","components/Button.js","data/textData.js","components/Input.js","components/Message.js","data/data.js","img/cloud_bad.png","img/cloud_good.png","img/cloud_not_selected.png","utils/functions.js","data/flagIcon.js","screens/HomeScreen.js","img/cloud_blue.png","img/cloud.png","components/Word.js","screens/GameScreen.js","App.js","store.js","reducers/userReducers.js","reducers/gameReducers.js","index.js"],"names":["SET_USER_NICKNAME_SUCCESS","SET_USER_NICKNAME_FAILURE","SET_USER_NICKNAME_RESET","CHANGE_LANGUAGE","reset","dispatch","a","type","changeLanguage","language","payload","Button","onCLick","label","className","onClick","allText","pl","homepage","title","placeholder","submit_button","gamepage","welcome","score","rules_title","rules_text","rules_score_part1","rules_score_part2","rules_score_part3","rules_score_part4","rules_score_part5","rules_score_part6","rules_score_part7","check_button","gb","Input","setNickname","value","useSelector","state","game","onChange","e","target","code","Message","variant","children","onClose","Alert","dismissible","defaultProps","data","firstpack","question","all_words","good_words","secondpack","thirdpack","submitAnswers","actualPack","setScore","answers","document","querySelectorAll","allWords","forEach","word","style","pointerEvents","userAnswers","answer","push","innerText","wordpack","result","good","bad","points","includes","length","compareAnswers","classList","remove","add","backgroundImage","cloud_good","cloud_bad","cloud_not_selected","FlagIcon","FlagIconFactory","React","useCssModules","HomeScreen","history","useState","isSubmited","setSubmit","flag","setFlag","useDispatch","user","usernameError","error","username","nickname","useEffect","submitUsername","useCallback","string","setUsername","charAt","toUpperCase","slice","toLowerCase","newLanguage","size","swapLanguage","Word","top","left","isActive","setActive","cloud","actualStyle","setStyle","ref","useRef","current","contains","cloud_blue","fontSize","transform","GameScreen","words","setWords","setQuestion","setPack","gameGenerated","setGenerated","allPos","window","innerWidth","i","j","shuffledPos","map","sort","Math","random","b","packs","floor","output","idx","key","pos","generateAllPositions","twords","tquestion","tactualPack","height","color","App","path","component","exact","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f5c1c4d0.chunk.js","sourcesContent":["export const SET_USER_NICKNAME_SUCCESS = \"SET_USER_NICKNAME_SUCCESS\";\r\nexport const SET_USER_NICKNAME_FAILURE = \"SET_USER_NICKNAME_FAILURE\";\r\nexport const SET_USER_NICKNAME_RESET = \"SET_USER_NICKNAME_RESET\";\r\n\r\nexport const CHANGE_LANGUAGE = \"CHANGE_LANGUAGE\";\r\n","import {\r\n    SET_USER_NICKNAME_FAILURE,\r\n    SET_USER_NICKNAME_SUCCESS,\r\n    SET_USER_NICKNAME_RESET,\r\n} from \"../constants/actions\";\r\n\r\nexport const setUsername = (username) => (dispatch) => {\r\n    if (username && username.length > 0) {\r\n        dispatch({\r\n            type: SET_USER_NICKNAME_SUCCESS,\r\n            payload: username,\r\n        });\r\n    } else {\r\n        dispatch({\r\n            type: SET_USER_NICKNAME_FAILURE,\r\n            payload: \"Invalid username\",\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset = () => async (dispatch) => {\r\n    dispatch({\r\n        type: SET_USER_NICKNAME_RESET,\r\n    });\r\n};\r\n","import { CHANGE_LANGUAGE } from \"../constants/actions\";\r\n\r\nexport const changeLanguage = (language) => (dispatch) => {\r\n    dispatch({\r\n        type: CHANGE_LANGUAGE,\r\n        payload: language,\r\n    });\r\n};\r\n","const Button = ({ onCLick, label }) => {\r\n\treturn (\r\n\t\t<button className=\"my-btn\" onClick={onCLick}>\r\n\t\t\t{label}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","const allText = {\r\n    pl: {\r\n        homepage: {\r\n            title: \"Gra chmura słów\",\r\n            placeholder: \"Wprowadź swoją nazwę tutaj...\",\r\n            submit_button: \"Zatwierdź\",\r\n        },\r\n        gamepage: {\r\n            welcome: \"Witaj \",\r\n            title: \"Zadanie:\",\r\n            score: \"Twoje punkty: \",\r\n            rules_title: \"Zasady\",\r\n            rules_text:\r\n                'Wybierz wszystkie wyrazy, które spełniają warunki zadania podanego nad planszą i naciśnij przycisk \"SPRAWDŹ WYNIKI\"',\r\n            rules_score_part1: \"Punkty = \",\r\n            rules_score_part2: \"(dobre odpowiedzi)\",\r\n            rules_score_part3: \"* 2 - (\",\r\n            rules_score_part4: \"złe odpowiedzi \",\r\n            rules_score_part5: \"+ \",\r\n            rules_score_part6:\r\n                \"poprawne odpowiedz, które nie zostały zaznaczone\",\r\n            rules_score_part7: \").\",\r\n            check_button: \"SPRAWDŹ WYNIKI\",\r\n        },\r\n    },\r\n    gb: {\r\n        homepage: {\r\n            title: \"Worldcloud game\",\r\n            placeholder: \"Enter your nickname here...\",\r\n            submit_button: \"Submit\",\r\n        },\r\n        gamepage: {\r\n            welcome: \"Hello \",\r\n            title: \"Task:\",\r\n            score: \"Your score: \",\r\n            rules_title: \"Rules\",\r\n            rules_text:\r\n                'Select all words that are answers to the question above board and hit button \"CHECK ANSWERS\".',\r\n            rules_score_part1: \"Score = \",\r\n            rules_score_part2: \"(good answers)\",\r\n            rules_score_part3: \"* 2 - (\",\r\n            rules_score_part4: \"wrong answers \",\r\n            rules_score_part5: \"+ \",\r\n            rules_score_part6: \"correct words that were not marked\",\r\n            rules_score_part7: \").\",\r\n            check_button: \"CHECK ANSWERS\",\r\n        },\r\n    },\r\n};\r\n\r\nexport default allText;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport allText from \"../data/textData\";\r\n\r\nconst Input = ({ setNickname, value }) => {\r\n    const { language } = useSelector((state) => state.game);\r\n\r\n    return (\r\n        <input\r\n            onChange={(e) => setNickname(e.target.value)}\r\n            type=\"text\"\r\n            placeholder={allText[language.code][\"homepage\"][\"placeholder\"]}\r\n            value={value}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children, onClose }) => {\r\n\treturn (\r\n\t\t<Alert\r\n\t\t\tclassName=\"myAlert\"\r\n\t\t\tvariant={variant}\r\n\t\t\tdismissible\r\n\t\t\tonClose={onClose}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Alert>\r\n\t);\r\n};\r\n\r\nMessage.defaultProps = {\r\n\tvariant: \"info\"\r\n};\r\n\r\nexport default Message;\r\n","const data = {\r\n    gb: {\r\n        firstpack: {\r\n            question: \"Select all animals\",\r\n            all_words: [\r\n                \"hole\",\r\n                \"sofa\",\r\n                \"pear\",\r\n                \"tiger\",\r\n                \"oatmeal\",\r\n                \"square\",\r\n                \"nut\",\r\n                \"cub\",\r\n                \"shirt\",\r\n                \"tub\",\r\n                \"passenger\",\r\n                \"cow\",\r\n            ],\r\n            good_words: [\"tiger\", \"cow\"],\r\n        },\r\n        secondpack: {\r\n            question: \"Select all colors\",\r\n            all_words: [\r\n                \"jeans\",\r\n                \"existence\",\r\n                \"ink\",\r\n                \"red\",\r\n                \"blue\",\r\n                \"yellow\",\r\n                \"laugh\",\r\n                \"behavior\",\r\n                \"expansion\",\r\n                \"white\",\r\n                \"black\",\r\n                \"cakes\",\r\n            ],\r\n            good_words: [\"red\", \"blue\", \"yellow\", \"white\", \"black\"],\r\n        },\r\n        thirdpack: {\r\n            question: \"Select all vehicles\",\r\n            all_words: [\r\n                \"belief\",\r\n                \"wire\",\r\n                \"car\",\r\n                \"bus\",\r\n                \"star\",\r\n                \"river\",\r\n                \"hat\",\r\n                \"skirt\",\r\n                \"train\",\r\n            ],\r\n            good_words: [\"car\", \"bus\", \"train\"],\r\n        },\r\n    },\r\n    pl: {\r\n        firstpack: {\r\n            question: \"Wybierz wszystkie zwierzęta\",\r\n            all_words: [\r\n                \"dziura\",\r\n                \"kanapa\",\r\n                \"gruszka\",\r\n                \"tygrys\",\r\n                \"kiwi\",\r\n                \"modny\",\r\n                \"orzech\",\r\n                \"czub\",\r\n                \"pilot\",\r\n                \"tuba\",\r\n                \"kowal\",\r\n                \"krowa\",\r\n            ],\r\n            good_words: [\"krowa\", \"tygrys\", \"kiwi\"],\r\n        },\r\n        secondpack: {\r\n            question: \"Wybierz wszystkie kolory\",\r\n            all_words: [\r\n                \"turkus\",\r\n                \"trzewia\",\r\n                \"nieobecny\",\r\n                \"czerwony\",\r\n                \"bladoniebieski\",\r\n                \"pomidorowa\",\r\n                \"opole\",\r\n                \"zachowanie\",\r\n                \"wahanie\",\r\n                \"przezroczysty\",\r\n                \"kamienny\",\r\n                \"sufit\",\r\n                \"szary\",\r\n            ],\r\n            good_words: [\"turkus\", \"czerwony\", \"bladoniebieski\", \"szary\"],\r\n        },\r\n        thirdpack: {\r\n            question: \"Wybierz wszystkie partykuły\",\r\n            all_words: [\r\n                \"bodaj\",\r\n                \"ale\",\r\n                \"tu\",\r\n                \"oraz\",\r\n                \"obok\",\r\n                \"nie\",\r\n                \"niech\",\r\n                \"tylko\",\r\n                \"czy\",\r\n            ],\r\n            good_words: [\"bodaj\", \"tu\", \"czy\"],\r\n        },\r\n    },\r\n};\r\n\r\nexport default data;\r\n","export default __webpack_public_path__ + \"static/media/cloud_bad.33193209.png\";","export default __webpack_public_path__ + \"static/media/cloud_good.acd64d74.png\";","export default __webpack_public_path__ + \"static/media/cloud_not_selected.a6e8afd4.png\";","import data from \"../data/data\";\r\nimport cloud_bad from \"../img/cloud_bad.png\";\r\nimport cloud_good from \"../img/cloud_good.png\";\r\nimport cloud_not_selected from \"../img/cloud_not_selected.png\";\r\n\r\nconst capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n};\r\n\r\nconst generateAllPositions = (code) => {\r\n    const allPos = [];\r\n    if (window.innerWidth <= 600) {\r\n        for (let i = 5; i <= 90; i += 10) {\r\n            for (let j = 5; j <= 60; j += 35) {\r\n                allPos.push([i, j]);\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 3; i <= 85; i += 15) {\r\n            for (let j = 3; j <= 85; j += 15) {\r\n                allPos.push([i, j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    let shuffledPos = allPos\r\n        .map((a) => ({ sort: Math.random(), value: a }))\r\n        .sort((a, b) => a.sort - b.sort)\r\n        .map((a) => a.value);\r\n\r\n    const packs = [\"firstpack\", \"secondpack\", \"thirdpack\"];\r\n    const actualPack = packs[Math.floor(Math.random() * packs.length)];\r\n\r\n    const output = [];\r\n    data[code][actualPack][\"all_words\"].map((word, idx) => {\r\n        return output.push({ key: word, pos: shuffledPos[idx] });\r\n    });\r\n\r\n    return [output, data[code][actualPack][\"question\"], actualPack];\r\n};\r\n\r\nconst compareAnswers = (userAnswers, wordpack, code) => {\r\n    const result = { good: [], bad: [] };\r\n    const points = { good: 0, bad: 0 };\r\n    userAnswers.forEach((answer) => {\r\n        if (!data[code][wordpack][\"good_words\"].includes(answer)) {\r\n            result[\"bad\"].push(answer);\r\n            points[\"bad\"] += 1;\r\n        } else {\r\n            result[\"good\"].push(answer);\r\n            points[\"good\"] += 1;\r\n        }\r\n    });\r\n    points[\"bad\"] +=\r\n        data[code][wordpack][\"good_words\"].length - result[\"good\"].length;\r\n    points[\"good\"] *= 2;\r\n\r\n    return [\r\n        result,\r\n        points[\"good\"] - points[\"bad\"],\r\n        data[code][wordpack][\"good_words\"],\r\n    ];\r\n};\r\n\r\nconst submitAnswers = (actualPack, setScore, code) => {\r\n    const answers = document.querySelectorAll(\".word-container-active\");\r\n    const allWords = document.querySelectorAll(\".word-container\");\r\n    allWords.forEach((word) => {\r\n        word.style.pointerEvents = \"none\";\r\n    });\r\n    const userAnswers = [];\r\n    answers.forEach((answer) => userAnswers.push(answer.innerText));\r\n    const [result, points, good_words] = compareAnswers(\r\n        userAnswers,\r\n        actualPack,\r\n        code\r\n    );\r\n\r\n    answers.forEach((answer) => {\r\n        if (result[\"good\"].includes(answer.innerText)) {\r\n            answer.classList.remove(\"word-container-active\");\r\n            answer.classList.add(\"word-container-good\");\r\n            answer.style.backgroundImage = `url(${cloud_good})`;\r\n        } else if (result[\"bad\"].includes(answer.innerText)) {\r\n            answer.classList.remove(\"word-container-active\");\r\n            answer.classList.add(\"word-container-bad\");\r\n            answer.style.backgroundImage = `url(${cloud_bad})`;\r\n        }\r\n    });\r\n\r\n    allWords.forEach((word) => {\r\n        if (\r\n            good_words.includes(word.innerText) &&\r\n            !result[\"good\"].includes(word.innerText)\r\n        ) {\r\n            word.style.backgroundImage = `url(${cloud_not_selected})`;\r\n        }\r\n    });\r\n\r\n    setScore(points);\r\n};\r\n\r\nexport {\r\n    capitalizeFirstLetter,\r\n    generateAllPositions,\r\n    compareAnswers,\r\n    submitAnswers,\r\n};\r\n","/* your-app/your-components-directory/FlagIcon.js */\r\n// @flow\r\nimport * as React from \"react\";\r\nimport FlagIconFactory from \"react-flag-icon-css\";\r\n\r\n// Please only use `FlagIconFactory` one time in your application, there is no\r\n// need to use it multiple times (it would slow down your app). You may place the\r\n// line below in a `FlagIcon.js` file in your 'components' directory, then\r\n// write `export default FlagIcon` as shown below and import it elsewhere in your app.\r\n// const FlagIcon = FlagIconFactory(React);\r\n// If you are not using css modules, write the following:\r\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false });\r\n\r\nexport default FlagIcon;\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { setUsername, reset } from \"../actions/userActions\";\r\nimport { changeLanguage } from \"../actions/gameActions\";\r\nimport Button from \"../components/Button\";\r\nimport Input from \"../components/Input\";\r\nimport Message from \"../components/Message\";\r\nimport { capitalizeFirstLetter } from \"../utils/functions\";\r\nimport allText from \"../data/textData\";\r\nimport FlagIcon from \"../data/flagIcon\";\r\n\r\nconst HomeScreen = ({ history }) => {\r\n    const [isSubmited, setSubmit] = useState(false);\r\n    const { language } = useSelector((state) => state.game);\r\n    const [flag, setFlag] = useState(language);\r\n    const dispatch = useDispatch();\r\n\r\n    const { error: usernameError, username } = useSelector(\r\n        (state) => state.user\r\n    );\r\n    const [nickname, setNickname] = useState(username);\r\n\r\n    useEffect(() => {\r\n        if (isSubmited && !usernameError) {\r\n            history.push(\"/game\");\r\n        }\r\n    }, [isSubmited, usernameError, history]);\r\n\r\n    const submitUsername = useCallback(() => {\r\n        reset();\r\n        if (nickname) {\r\n            setSubmit(true);\r\n        }\r\n        dispatch(setUsername(capitalizeFirstLetter(nickname)));\r\n    }, [nickname]);\r\n\r\n    // const submitUsername = () => {\r\n    //     reset();\r\n    //     if (nickname) {\r\n    //         setSubmit(true);\r\n    //     }\r\n    //     dispatch(setUsername(capitalizeFirstLetter(nickname)));\r\n    // };\r\n\r\n    const alertClose = () => {\r\n        dispatch(reset());\r\n        setSubmit(false);\r\n    };\r\n\r\n    const swapLanguage = () => {\r\n        if (flag.code === \"gb\") {\r\n            const newLanguage = { code: \"pl\", size: \"2x\" };\r\n            setFlag(newLanguage);\r\n            dispatch(changeLanguage(newLanguage));\r\n        } else {\r\n            const newLanguage = { code: \"gb\", size: \"2x\" };\r\n            setFlag(newLanguage);\r\n            dispatch(changeLanguage(newLanguage));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <div className=\"flag-wrapper\" onClick={() => swapLanguage()}>\r\n                <FlagIcon\r\n                    code={flag.code}\r\n                    size={flag.size}\r\n                    className=\"flag-item\"\r\n                />\r\n            </div>\r\n            <div className=\"homepage-content\">\r\n                <h1 className=\"page-title\">\r\n                    {allText[language.code][\"homepage\"][\"title\"]}\r\n                </h1>\r\n                <Input value={nickname} setNickname={setNickname} />\r\n\r\n                <Button\r\n                    onCLick={submitUsername}\r\n                    label={allText[language.code][\"homepage\"][\"submit_button\"]}\r\n                />\r\n            </div>\r\n            {usernameError ? (\r\n                <Message onClose={alertClose} variant=\"danger\">\r\n                    {usernameError}\r\n                </Message>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","export default __webpack_public_path__ + \"static/media/cloud_blue.68f72406.png\";","export default __webpack_public_path__ + \"static/media/cloud.1b17da74.png\";","import { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport cloud_blue from \"../img/cloud_blue.png\";\r\nimport cloud from \"../img/cloud.png\";\r\n\r\nconst Word = ({ children, top, left }) => {\r\n    const [isActive, setActive] = useState(false);\r\n    const [actualStyle, setStyle] = useState(`url(${cloud})`);\r\n    const ref = useRef();\r\n    const { language } = useSelector((state) => state.game);\r\n\r\n    const style = {\r\n        gb: { fontSize: \"22px\", transform: \"translate(-5%, 110%)\" },\r\n        pl: { fontSize: \"16px\", transform: \"translate(-5%, 160%)\" },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ref.current.classList.contains(\"word-container-active\")) {\r\n            setStyle(`url(${cloud_blue})`);\r\n        } else {\r\n            setStyle(`url(${cloud})`);\r\n        }\r\n    }, [isActive]);\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                isActive\r\n                    ? \"word-container word-container-active\"\r\n                    : \"word-container\"\r\n            }\r\n            style={{\r\n                top: top,\r\n                left: left,\r\n                backgroundImage: actualStyle,\r\n            }}\r\n            onClick={() => setActive(!isActive)}\r\n            ref={ref}\r\n        >\r\n            <div className=\"word\" style={style[language.code]}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Word;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Button from \"../components/Button\";\r\nimport Word from \"../components/Word\";\r\nimport { reset } from \"../actions/userActions\";\r\nimport { generateAllPositions, submitAnswers } from \"../utils/functions\";\r\nimport allText from \"../data/textData\";\r\n\r\nconst GameScreen = ({ history }) => {\r\n    const [score, setScore] = useState();\r\n    const [words, setWords] = useState();\r\n    const [question, setQuestion] = useState();\r\n    const [actualPack, setPack] = useState();\r\n\r\n    const [gameGenerated, setGenerated] = useState(false);\r\n    const { username } = useSelector((state) => state.user);\r\n    const { language } = useSelector((state) => state.game);\r\n\r\n    useEffect(() => {\r\n        if (!gameGenerated) {\r\n            const [twords, tquestion, tactualPack] = generateAllPositions(\r\n                language.code\r\n            );\r\n            setWords(twords);\r\n            setQuestion(tquestion);\r\n            setPack(tactualPack);\r\n            setGenerated(true);\r\n        }\r\n    }, [gameGenerated]);\r\n\r\n    if (!username || username.length === 0) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"page-container game-interface-container\"\r\n            style={{ height: \"100%\" }}\r\n        >\r\n            <h1>{`${\r\n                allText[language.code][\"gamepage\"][\"welcome\"]\r\n            } ${username}!`}</h1>\r\n\r\n            <h3>\r\n                {allText[language.code][\"gamepage\"][\"title\"]} {question}\r\n            </h3>\r\n\r\n            {score ? (\r\n                <h3\r\n                    className={\r\n                        score > 0\r\n                            ? \"points points-success\"\r\n                            : \"points points-fail\"\r\n                    }\r\n                >\r\n                    {`${allText[language.code][\"gamepage\"][\"score\"]} ${score}`}\r\n                </h3>\r\n            ) : null}\r\n\r\n            <div className=\"game-container\">\r\n                {words &&\r\n                    words.map((word, idx) => {\r\n                        return (\r\n                            <Word\r\n                                top={`${word.pos[0]}%`}\r\n                                left={`${word.pos[1]}%`}\r\n                                key={`word-${idx}`}\r\n                            >\r\n                                {word.key}\r\n                            </Word>\r\n                        );\r\n                    })}\r\n            </div>\r\n\r\n            <div className=\"side-panel\">\r\n                <h2>{allText[language.code][\"gamepage\"][\"rules_title\"]}</h2>\r\n                <p>{allText[language.code][\"gamepage\"][\"rules_text\"]}</p>\r\n                <div className=\"separator\"></div>\r\n\r\n                {score ? (\r\n                    <p>\r\n                        {\r\n                            allText[language.code][\"gamepage\"][\r\n                                \"rules_score_part1\"\r\n                            ]\r\n                        }{\" \"}\r\n                        <span style={{ color: \"#35ca4e\" }}>\r\n                            {\r\n                                allText[language.code][\"gamepage\"][\r\n                                    \"rules_score_part2\"\r\n                                ]\r\n                            }\r\n                        </span>{\" \"}\r\n                        {\r\n                            allText[language.code][\"gamepage\"][\r\n                                \"rules_score_part3\"\r\n                            ]\r\n                        }\r\n                        <span style={{ color: \"#bb303f\" }}>\r\n                            {\r\n                                allText[language.code][\"gamepage\"][\r\n                                    \"rules_score_part4\"\r\n                                ]\r\n                            }\r\n                        </span>{\" \"}\r\n                        {\r\n                            allText[language.code][\"gamepage\"][\r\n                                \"rules_score_part5\"\r\n                            ]\r\n                        }{\" \"}\r\n                        <span style={{ color: \"#6c6c6c\" }}>\r\n                            {\r\n                                allText[language.code][\"gamepage\"][\r\n                                    \"rules_score_part6\"\r\n                                ]\r\n                            }\r\n                        </span>\r\n                        {\r\n                            allText[language.code][\"gamepage\"][\r\n                                \"rules_score_part7\"\r\n                            ]\r\n                        }\r\n                    </p>\r\n                ) : null}\r\n            </div>\r\n\r\n            <Button\r\n                onCLick={() =>\r\n                    submitAnswers(actualPack, setScore, language.code)\r\n                }\r\n                label={allText[language.code][\"gamepage\"][\"check_button\"]}\r\n            />\r\n\r\n            <Button\r\n                onCLick={() => {\r\n                    reset();\r\n                    history.push(\"/\");\r\n                }}\r\n                label=\"Menu\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameScreen;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport GameScreen from \"./screens/GameScreen\";\r\n\r\nimport \"./styles/styles.scss\";\r\nimport \"./styles/componentStyles.scss\";\r\nimport \"./styles/bootstrap.min.css\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/game\" component={GameScreen} />\r\n                <Route exact path=\"/\" component={HomeScreen} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userReducer } from \"./reducers/userReducers\";\r\nimport { gameReducer } from \"./reducers/gameReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    user: userReducer,\r\n    game: gameReducer,\r\n});\r\n\r\nconst initialState = {\r\n    user: { username: \"\" },\r\n    game: { language: { code: \"gb\", size: \"2x\" } },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    SET_USER_NICKNAME_SUCCESS,\r\n    SET_USER_NICKNAME_FAILURE,\r\n    SET_USER_NICKNAME_RESET,\r\n} from \"../constants/actions\";\r\n\r\nexport const userReducer = (state = { username: \"\" }, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_NICKNAME_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username: action.payload,\r\n                error: \"\",\r\n            };\r\n        case SET_USER_NICKNAME_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n        case SET_USER_NICKNAME_RESET:\r\n            return {\r\n                username: \"\",\r\n                error: \"\",\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { CHANGE_LANGUAGE } from \"../constants/actions\";\r\n\r\nexport const gameReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LANGUAGE:\r\n            return {\r\n                language: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\trootElement\r\n);\r\n"],"sourceRoot":""}