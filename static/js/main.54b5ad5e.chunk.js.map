{"version":3,"sources":["constants/actions.js","actions/userActions.js","components/Button.js","components/Input.js","components/Message.js","data/data.js","img/cloud_bad.png","img/cloud_good.png","utils/functions.js","screens/HomeScreen.js","img/cloud_blue.png","img/cloud.png","components/Word.js","screens/GameScreen.js","App.js","store.js","reducers/userReducers.js","index.js"],"names":["SET_USER_NICKNAME_SUCCESS","SET_USER_NICKNAME_FAILURE","SET_USER_NICKNAME_RESET","reset","dispatch","a","type","Button","onCLick","label","className","onClick","Input","setNickname","onChange","e","target","value","placeholder","Message","variant","children","onClose","Alert","dismissible","defaultProps","data","firstpack","question","all_words","good_words","secondpack","thirdpack","submitAnswers","actualPack","setScore","answers","document","querySelectorAll","forEach","word","style","pointerEvents","userAnswers","answer","push","innerText","wordpack","result","good","bad","points","includes","length","compareAnswers","classList","remove","add","backgroundImage","cloud_good","cloud_bad","HomeScreen","history","useState","nickname","isSubmited","setSubmit","useDispatch","usernameError","useSelector","state","user","error","useEffect","username","string","charAt","toUpperCase","slice","toLowerCase","payload","Word","top","left","isActive","setActive","cloud","actualStyle","setStyle","ref","useRef","current","contains","cloud_blue","GameScreen","score","words","setWords","setQuestion","setPack","gameGenerated","setGenerated","allPos","window","innerWidth","i","j","console","log","shuffledPos","map","sort","Math","random","b","packs","floor","output","idx","key","pos","generateAllPositions","twords","tquestion","tactualPack","height","App","path","component","exact","reducer","combineReducers","action","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","rootElement","getElementById","ReactDOM","render"],"mappings":"sPAAaA,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAA0B,0BCkB1BC,EAAQ,yDAAM,WAAOC,GAAP,SAAAC,EAAA,sDAC1BD,EAAS,CACRE,KAAMJ,IAFmB,2CAAN,uD,OCZNK,EARA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC1B,OACC,wBAAQC,UAAU,SAASC,QAASH,EAApC,SACEC,KCOWG,EAVD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAChB,OACC,uBACCC,SAAU,SAACC,GAAD,OAAOF,EAAYE,EAAEC,OAAOC,QACtCX,KAAK,OACLY,YAAY,iC,QCFTC,EAAU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACrC,OACC,cAACC,EAAA,EAAD,CACCb,UAAU,UACVU,QAASA,EACTI,aAAW,EACXF,QAASA,EAJV,SAMED,KAKJF,EAAQM,aAAe,CACtBL,QAAS,QAGKD,QCkCAO,EAtDF,CACZC,UAAW,CACVC,SAAU,qBACVC,UAAW,CACV,OACA,OACA,OACA,QACA,UACA,SACA,MACA,MACA,QACA,MACA,YACA,OAEDC,WAAY,CAAC,QAAS,QAEvBC,WAAY,CACXH,SAAU,oBACVC,UAAW,CACV,QACA,YACA,MACA,MACA,OACA,SACA,QACA,WACA,YACA,QACA,QACA,SAEDC,WAAY,CAAC,MAAO,OAAQ,SAAU,QAAS,UAEhDE,UAAW,CACVJ,SAAU,sBACVC,UAAW,CACV,SACA,OACA,MACA,MACA,OACA,QACA,MACA,QACA,SAEDC,WAAY,CAAC,MAAO,MAAO,WClDd,MAA0B,sCCA1B,MAA0B,uCC6DnCG,EAAgB,SAACC,EAAYC,GAC/B,IAAMC,EAAUC,SAASC,iBAAiB,0BACzBD,SAASC,iBAAiB,mBAClCC,SAAQ,SAACC,GACdA,EAAKC,MAAMC,cAAgB,UAE/B,IAAMC,EAAc,GACpBP,EAAQG,SAAQ,SAACK,GAAD,OAAYD,EAAYE,KAAKD,EAAOE,cACpD,MA3BmB,SAACH,EAAaI,GACjC,IAAMC,EAAS,CAAEC,KAAM,GAAIC,IAAK,IAC1BC,EAAS,CAAEF,KAAM,EAAGC,IAAK,GAc/B,OAbAP,EAAYJ,SAAQ,SAACK,GACZlB,EAAKqB,GAAL,WAA6BK,SAASR,IAIvCI,EAAM,KAASH,KAAKD,GACpBO,EAAM,MAAY,IAJlBH,EAAM,IAAQH,KAAKD,GACnBO,EAAM,KAAW,MAMzBA,EAAM,KACFzB,EAAKqB,GAAL,WAA6BM,OAASL,EAAM,KAASK,OACzDF,EAAM,MAAY,EAEX,CAACH,EAAQG,EAAM,KAAWA,EAAM,KAWdG,CAAeX,EAAaT,GAArD,mBAAOc,EAAP,KAAeG,EAAf,KACAf,EAAQG,SAAQ,SAACK,GACTI,EAAM,KAASI,SAASR,EAAOE,YAC/BF,EAAOW,UAAUC,OAAO,yBACxBZ,EAAOW,UAAUE,IAAI,uBACrBb,EAAOH,MAAMiB,gBAAb,cAAsCC,EAAtC,MACOX,EAAM,IAAQI,SAASR,EAAOE,aACrCF,EAAOW,UAAUC,OAAO,yBACxBZ,EAAOW,UAAUE,IAAI,sBACrBb,EAAOH,MAAMiB,gBAAb,cAAsCE,EAAtC,SAGRzB,EAASgB,IC7BEU,EA3CI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBnD,EAAjB,KACA,EAAgCkD,oBAAS,GAAzC,mBAAOE,EAAP,KAAmBC,EAAnB,KACM9D,EAAW+D,cAEFC,EAAkBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAtDC,MAERC,qBAAU,WACLR,IAAeG,GAClBN,EAAQjB,KAAK,WAEZ,CAACoB,EAAYG,EAAeN,IAe/B,OACC,sBAAKpD,UAAU,iBAAf,UACC,sBAAKA,UAAU,mBAAf,UACC,oBAAIA,UAAU,aAAd,6BACA,cAAC,EAAD,CAAOG,YAAaA,IAEpB,cAAC,EAAD,CAAQL,QAnBY,WRhBG,IAACkE,EOFGC,ECmB7BxE,IACI6D,GACHE,GAAU,GAEX9D,GRrB0BsE,GOFGC,ECuBcX,GDtB3BY,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GAAGC,cPCnB,SAAC3E,GACrCsE,GAAYA,EAASrB,OAAS,EACjCjD,EAAS,CACRE,KAAMN,EACNgF,QAASN,IAGVtE,EAAS,CACRE,KAAML,EACN+E,QAAS,yBQ0ByBvE,MAAM,cAEvC2D,EACA,cAAC,EAAD,CAAS9C,QAdO,WAClBnB,IACA+D,GAAU,IAYsB9C,QAAQ,SAAtC,SACEgD,IAEC,SC/CQ,MAA0B,uCCA1B,MAA0B,kCCqC1Ba,EAjCF,SAAC,GAA6B,IAA3B5D,EAA0B,EAA1BA,SAAU6D,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAC3B,EAA8BpB,oBAAS,GAAvC,mBAAOqB,EAAP,KAAiBC,EAAjB,KACA,EAAgCtB,mBAAS,OAAD,OAAQuB,EAAR,MAAxC,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAMC,mBAUZ,OARAjB,qBAAU,WACFgB,EAAIE,QAAQpC,UAAUqC,SAAS,yBAC/BJ,EAAS,OAAD,OAAQK,EAAR,MAERL,EAAS,OAAD,OAAQF,EAAR,QAEb,CAACF,IAGA,qBACI1E,UACI0E,EACM,uCACA,iBAEV3C,MAAO,CACHyC,IAAKA,EACLC,KAAMA,EACNzB,gBAAiB6B,GAErB5E,QAAS,kBAAM0E,GAAWD,IAC1BK,IAAKA,EAZT,SAcI,qBAAK/E,UAAU,OAAf,SAAuBW,OC4DpByE,EApFI,SAAC,GAAiB,IAAfhC,EAAc,EAAdA,QAClB,EAA0BC,qBAA1B,mBAAOgC,EAAP,KAAc5D,EAAd,KACA,EAA0B4B,qBAA1B,mBAAOiC,EAAP,KAAcC,EAAd,KACA,EAAgClC,qBAAhC,mBAAOnC,EAAP,KAAiBsE,EAAjB,KACA,EAA8BnC,qBAA9B,mBAAO7B,EAAP,KAAmBiE,EAAnB,KAEA,EAAsCpC,oBAAS,GAA/C,mBAAOqC,EAAP,KAAsBC,EAAtB,KACQ3B,EAAaL,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA1CG,SAgBR,OAdAD,qBAAU,WACN,IAAK2B,EAAe,CAChB,MLXiB,WACzB,IAAME,EAAS,GACf,GAAIC,OAAOC,YAAc,IACrB,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,GAAK,GAC1B,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,GAAK,GAC1BJ,EAAOzD,KAAK,CAAC4D,EAAGC,SAIxB,IAAK,IAAID,EAAI,EAAGA,GAAK,GAAIA,GAAK,GAC1B,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,GAAK,GAC1BJ,EAAOzD,KAAK,CAAC4D,EAAGC,IAK5BC,QAAQC,IAAIN,GAEZ,IAAIO,EAAcP,EACbQ,KAAI,SAACzG,GAAD,MAAQ,CAAE0G,KAAMC,KAAKC,SAAUhG,MAAOZ,MAC1C0G,MAAK,SAAC1G,EAAG6G,GAAJ,OAAU7G,EAAE0G,KAAOG,EAAEH,QAC1BD,KAAI,SAACzG,GAAD,OAAOA,EAAEY,SAEZkG,EAAQ,CAAC,YAAa,aAAc,aACpCjF,EAAaiF,EAAMH,KAAKI,MAAMJ,KAAKC,SAAWE,EAAM9D,SAEpDgE,EAAS,GAKf,OAJA3F,EAAKQ,GAAL,UAA8B4E,KAAI,SAACtE,EAAM8E,GACrC,OAAOD,EAAOxE,KAAK,CAAE0E,IAAK/E,EAAMgF,IAAKX,EAAYS,QAG9C,CAACD,EAAQ3F,EAAKQ,GAAL,SAA8BA,GKpBGuF,GAAzC,mBAAOC,EAAP,KAAeC,EAAf,KAA0BC,EAA1B,KACA3B,EAASyB,GACTxB,EAAYyB,GACZxB,EAAQyB,GACRvB,GAAa,MAElB,CAACD,IAEC1B,GAAgC,IAApBA,EAASrB,QACtBS,EAAQjB,KAAK,KAIb,sBACInC,UAAU,0CACV+B,MAAO,CAAEoF,OAAQ,QAFrB,UAII,6CAAcnD,EAAd,OACA,wCAAW9C,KACVmE,EACG,qBACIrF,UACIqF,EAAQ,EACF,wBACA,qBAJd,yBAOiBA,KAEjB,KACJ,qBAAKrF,UAAU,iBAAf,SACKsF,GACGA,EAAMc,KAAI,SAACtE,EAAM8E,GACb,OACI,cAAC,EAAD,CACIpC,IAAG,UAAK1C,EAAKgF,IAAI,GAAd,KACHrC,KAAI,UAAK3C,EAAKgF,IAAI,GAAd,KAFR,SAKKhF,EAAK+E,KALV,eAGiBD,SAQjC,sBAAK5G,UAAU,aAAf,UACI,uCACA,8HAICqF,EACG,mHAIA,QAER,cAAC,EAAD,CACIvF,QAAS,kBAAMyB,EAAcC,EAAYC,IACzC1B,MAAM,kBAEV,cAAC,EAAD,CACID,QAAS,WACLL,IACA2D,EAAQjB,KAAK,MAEjBpC,MAAM,a,kBC7EP,SAASqH,IACpB,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWlC,IAC/B,cAAC,IAAD,CAAOmC,OAAK,EAACF,KAAK,IAAIC,UAAWnE,S,oCCT3CqE,EAAUC,0BAAgB,CAC/B5D,KCA0B,WAAuC,IAAtCD,EAAqC,uDAA7B,CAAEI,SAAU,IAAM0D,EAAW,uCAChE,OAAQA,EAAO9H,MACd,KAAKN,EACJ,OAAO,2BACHsE,GADJ,IAECI,SAAU0D,EAAOpD,QACjBR,MAAO,KAET,KAAKvE,EACJ,OAAO,2BACHqE,GADJ,IAECE,MAAO4D,EAAOpD,UAEhB,KAAK9E,EACJ,MAAO,CACNwE,SAAU,GACVF,MAAO,IAET,QACC,OAAOF,MDdJ+D,EAAa,CAACC,KAQLC,EANDC,sBACbN,EALoB,CAAE3D,KAAM,CAAEG,SAAU,KAOxC+D,8BAAoBC,kBAAe,WAAf,EAAmBL,KEVlCM,EAActG,SAASuG,eAAe,QAC5CC,IAASC,OACR,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACC,cAACT,EAAD,MAEDa,K","file":"static/js/main.54b5ad5e.chunk.js","sourcesContent":["export const SET_USER_NICKNAME_SUCCESS = \"SET_USER_NICKNAME_SUCCESS\";\r\nexport const SET_USER_NICKNAME_FAILURE = \"SET_USER_NICKNAME_FAILURE\";\r\nexport const SET_USER_NICKNAME_RESET = \"SET_USER_NICKNAME_RESET\";\r\n","import {\r\n\tSET_USER_NICKNAME_FAILURE,\r\n\tSET_USER_NICKNAME_SUCCESS,\r\n\tSET_USER_NICKNAME_RESET\r\n} from \"../constants/actions\";\r\n\r\nexport const setUsername = (username) => (dispatch) => {\r\n\tif (username && username.length > 0) {\r\n\t\tdispatch({\r\n\t\t\ttype: SET_USER_NICKNAME_SUCCESS,\r\n\t\t\tpayload: username\r\n\t\t});\r\n\t} else {\r\n\t\tdispatch({\r\n\t\t\ttype: SET_USER_NICKNAME_FAILURE,\r\n\t\t\tpayload: \"Invalid username\"\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const reset = () => async (dispatch) => {\r\n\tdispatch({\r\n\t\ttype: SET_USER_NICKNAME_RESET\r\n\t});\r\n};\r\n","const Button = ({ onCLick, label }) => {\r\n\treturn (\r\n\t\t<button className=\"my-btn\" onClick={onCLick}>\r\n\t\t\t{label}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","const Input = ({ setNickname }) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tonChange={(e) => setNickname(e.target.value)}\r\n\t\t\ttype=\"text\"\r\n\t\t\tplaceholder=\"Enter your nickname here...\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children, onClose }) => {\r\n\treturn (\r\n\t\t<Alert\r\n\t\t\tclassName=\"myAlert\"\r\n\t\t\tvariant={variant}\r\n\t\t\tdismissible\r\n\t\t\tonClose={onClose}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Alert>\r\n\t);\r\n};\r\n\r\nMessage.defaultProps = {\r\n\tvariant: \"info\"\r\n};\r\n\r\nexport default Message;\r\n","const data = {\r\n\tfirstpack: {\r\n\t\tquestion: \"Select all animals\",\r\n\t\tall_words: [\r\n\t\t\t\"hole\",\r\n\t\t\t\"sofa\",\r\n\t\t\t\"pear\",\r\n\t\t\t\"tiger\",\r\n\t\t\t\"oatmeal\",\r\n\t\t\t\"square\",\r\n\t\t\t\"nut\",\r\n\t\t\t\"cub\",\r\n\t\t\t\"shirt\",\r\n\t\t\t\"tub\",\r\n\t\t\t\"passenger\",\r\n\t\t\t\"cow\"\r\n\t\t],\r\n\t\tgood_words: [\"tiger\", \"cow\"]\r\n\t},\r\n\tsecondpack: {\r\n\t\tquestion: \"Select all colors\",\r\n\t\tall_words: [\r\n\t\t\t\"jeans\",\r\n\t\t\t\"existence\",\r\n\t\t\t\"ink\",\r\n\t\t\t\"red\",\r\n\t\t\t\"blue\",\r\n\t\t\t\"yellow\",\r\n\t\t\t\"laugh\",\r\n\t\t\t\"behavior\",\r\n\t\t\t\"expansion\",\r\n\t\t\t\"white\",\r\n\t\t\t\"black\",\r\n\t\t\t\"cakes\"\r\n\t\t],\r\n\t\tgood_words: [\"red\", \"blue\", \"yellow\", \"white\", \"black\"]\r\n\t},\r\n\tthirdpack: {\r\n\t\tquestion: \"Select all vehicles\",\r\n\t\tall_words: [\r\n\t\t\t\"belief\",\r\n\t\t\t\"wire\",\r\n\t\t\t\"car\",\r\n\t\t\t\"bus\",\r\n\t\t\t\"star\",\r\n\t\t\t\"river\",\r\n\t\t\t\"hat\",\r\n\t\t\t\"skirt\",\r\n\t\t\t\"train\"\r\n\t\t],\r\n\t\tgood_words: [\"car\", \"bus\", \"train\"]\r\n\t}\r\n};\r\n\r\nexport default data;\r\n","export default __webpack_public_path__ + \"static/media/cloud_bad.33193209.png\";","export default __webpack_public_path__ + \"static/media/cloud_good.acd64d74.png\";","import data from \"../data/data\";\r\nimport cloud_bad from \"../img/cloud_bad.png\";\r\nimport cloud_good from \"../img/cloud_good.png\";\r\n\r\nconst capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n};\r\n\r\nconst generateAllPositions = () => {\r\n    const allPos = [];\r\n    if (window.innerWidth <= 600) {\r\n        for (let i = 5; i <= 90; i += 10) {\r\n            for (let j = 5; j <= 60; j += 35) {\r\n                allPos.push([i, j]);\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 3; i <= 85; i += 15) {\r\n            for (let j = 3; j <= 85; j += 15) {\r\n                allPos.push([i, j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log(allPos);\r\n\r\n    let shuffledPos = allPos\r\n        .map((a) => ({ sort: Math.random(), value: a }))\r\n        .sort((a, b) => a.sort - b.sort)\r\n        .map((a) => a.value);\r\n\r\n    const packs = [\"firstpack\", \"secondpack\", \"thirdpack\"];\r\n    const actualPack = packs[Math.floor(Math.random() * packs.length)];\r\n\r\n    const output = [];\r\n    data[actualPack][\"all_words\"].map((word, idx) => {\r\n        return output.push({ key: word, pos: shuffledPos[idx] });\r\n    });\r\n\r\n    return [output, data[actualPack][\"question\"], actualPack];\r\n};\r\n\r\nconst compareAnswers = (userAnswers, wordpack) => {\r\n    const result = { good: [], bad: [] };\r\n    const points = { good: 0, bad: 0 };\r\n    userAnswers.forEach((answer) => {\r\n        if (!data[wordpack][\"good_words\"].includes(answer)) {\r\n            result[\"bad\"].push(answer);\r\n            points[\"bad\"] += 1;\r\n        } else {\r\n            result[\"good\"].push(answer);\r\n            points[\"good\"] += 1;\r\n        }\r\n    });\r\n    points[\"bad\"] +=\r\n        data[wordpack][\"good_words\"].length - result[\"good\"].length;\r\n    points[\"good\"] *= 2;\r\n\r\n    return [result, points[\"good\"] - points[\"bad\"]];\r\n};\r\n\r\nconst submitAnswers = (actualPack, setScore) => {\r\n    const answers = document.querySelectorAll(\".word-container-active\");\r\n    const allWords = document.querySelectorAll(\".word-container\");\r\n    allWords.forEach((word) => {\r\n        word.style.pointerEvents = \"none\";\r\n    });\r\n    const userAnswers = [];\r\n    answers.forEach((answer) => userAnswers.push(answer.innerText));\r\n    const [result, points] = compareAnswers(userAnswers, actualPack);\r\n    answers.forEach((answer) => {\r\n        if (result[\"good\"].includes(answer.innerText)) {\r\n            answer.classList.remove(\"word-container-active\");\r\n            answer.classList.add(\"word-container-good\");\r\n            answer.style.backgroundImage = `url(${cloud_good})`;\r\n        } else if (result[\"bad\"].includes(answer.innerText)) {\r\n            answer.classList.remove(\"word-container-active\");\r\n            answer.classList.add(\"word-container-bad\");\r\n            answer.style.backgroundImage = `url(${cloud_bad})`;\r\n        }\r\n    });\r\n    setScore(points);\r\n};\r\n\r\nexport {\r\n    capitalizeFirstLetter,\r\n    generateAllPositions,\r\n    compareAnswers,\r\n    submitAnswers,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { setUsername, reset } from \"../actions/userActions\";\r\nimport Button from \"../components/Button\";\r\nimport Input from \"../components/Input\";\r\nimport Message from \"../components/Message\";\r\nimport { capitalizeFirstLetter } from \"../utils/functions\";\r\n\r\nconst HomeScreen = ({ history }) => {\r\n\tconst [nickname, setNickname] = useState(\"\");\r\n\tconst [isSubmited, setSubmit] = useState(false);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { error: usernameError } = useSelector((state) => state.user);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isSubmited && !usernameError) {\r\n\t\t\thistory.push(\"/game\");\r\n\t\t}\r\n\t}, [isSubmited, usernameError, history]);\r\n\r\n\tconst submitUsername = () => {\r\n\t\treset();\r\n\t\tif (nickname) {\r\n\t\t\tsetSubmit(true);\r\n\t\t}\r\n\t\tdispatch(setUsername(capitalizeFirstLetter(nickname)));\r\n\t};\r\n\r\n\tconst alertClose = () => {\r\n\t\treset();\r\n\t\tsetSubmit(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"page-container\">\r\n\t\t\t<div className=\"homepage-content\">\r\n\t\t\t\t<h1 className=\"page-title\">Worldcloud Game</h1>\r\n\t\t\t\t<Input setNickname={setNickname} />\r\n\r\n\t\t\t\t<Button onCLick={submitUsername} label=\"Submit\" />\r\n\t\t\t</div>\r\n\t\t\t{usernameError ? (\r\n\t\t\t\t<Message onClose={alertClose} variant=\"danger\">\r\n\t\t\t\t\t{usernameError}\r\n\t\t\t\t</Message>\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HomeScreen;\r\n","export default __webpack_public_path__ + \"static/media/cloud_blue.68f72406.png\";","export default __webpack_public_path__ + \"static/media/cloud.1b17da74.png\";","import { useState, useRef, useEffect } from \"react\";\r\nimport cloud_blue from \"../img/cloud_blue.png\";\r\nimport cloud from \"../img/cloud.png\";\r\n\r\nconst Word = ({ children, top, left }) => {\r\n    const [isActive, setActive] = useState(false);\r\n    const [actualStyle, setStyle] = useState(`url(${cloud})`);\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        if (ref.current.classList.contains(\"word-container-active\")) {\r\n            setStyle(`url(${cloud_blue})`);\r\n        } else {\r\n            setStyle(`url(${cloud})`);\r\n        }\r\n    }, [isActive]);\r\n\r\n    return (\r\n        <div\r\n            className={\r\n                isActive\r\n                    ? \"word-container word-container-active\"\r\n                    : \"word-container\"\r\n            }\r\n            style={{\r\n                top: top,\r\n                left: left,\r\n                backgroundImage: actualStyle,\r\n            }}\r\n            onClick={() => setActive(!isActive)}\r\n            ref={ref}\r\n        >\r\n            <div className=\"word\">{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Word;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Button from \"../components/Button\";\r\nimport Word from \"../components/Word\";\r\nimport { reset } from \"../actions/userActions\";\r\nimport { generateAllPositions, submitAnswers } from \"../utils/functions\";\r\n\r\nconst GameScreen = ({ history }) => {\r\n    const [score, setScore] = useState();\r\n    const [words, setWords] = useState();\r\n    const [question, setQuestion] = useState();\r\n    const [actualPack, setPack] = useState();\r\n\r\n    const [gameGenerated, setGenerated] = useState(false);\r\n    const { username } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        if (!gameGenerated) {\r\n            const [twords, tquestion, tactualPack] = generateAllPositions();\r\n            setWords(twords);\r\n            setQuestion(tquestion);\r\n            setPack(tactualPack);\r\n            setGenerated(true);\r\n        }\r\n    }, [gameGenerated]);\r\n\r\n    if (!username || username.length === 0) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"page-container game-interface-container\"\r\n            style={{ height: \"100%\" }}\r\n        >\r\n            <h1>{`Witaj ${username}!`}</h1>\r\n            <h3>Task: {question}</h3>\r\n            {score ? (\r\n                <h3\r\n                    className={\r\n                        score > 0\r\n                            ? \"points points-success\"\r\n                            : \"points points-fail\"\r\n                    }\r\n                >\r\n                    Your score: {score}\r\n                </h3>\r\n            ) : null}\r\n            <div className=\"game-container\">\r\n                {words &&\r\n                    words.map((word, idx) => {\r\n                        return (\r\n                            <Word\r\n                                top={`${word.pos[0]}%`}\r\n                                left={`${word.pos[1]}%`}\r\n                                key={`word-${idx}`}\r\n                            >\r\n                                {word.key}\r\n                            </Word>\r\n                        );\r\n                    })}\r\n            </div>\r\n\r\n            <div className=\"side-panel\">\r\n                <h2>Rules</h2>\r\n                <p>\r\n                    Select all words that are answers to the question above\r\n                    board and hit button 'CHECK ANSWERS'.\r\n                </p>\r\n                {score ? (\r\n                    <p>\r\n                        Score = (good answers) * 2 - (wrong answers + correct\r\n                        words that were not marked).\r\n                    </p>\r\n                ) : null}\r\n            </div>\r\n            <Button\r\n                onCLick={() => submitAnswers(actualPack, setScore)}\r\n                label=\"Check answers\"\r\n            />\r\n            <Button\r\n                onCLick={() => {\r\n                    reset();\r\n                    history.push(\"/\");\r\n                }}\r\n                label=\"Menu\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameScreen;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport GameScreen from \"./screens/GameScreen\";\r\n\r\nimport \"./styles/styles.scss\";\r\nimport \"./styles/componentStyles.scss\";\r\nimport \"./styles/bootstrap.min.css\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/game\" component={GameScreen} />\r\n                <Route exact path=\"/\" component={HomeScreen} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userReducer } from \"./reducers/userReducers\";\r\n\r\nconst reducer = combineReducers({\r\n\tuser: userReducer\r\n});\r\n\r\nconst initialState = { user: { username: \"\" } };\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n\treducer,\r\n\tinitialState,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n\tSET_USER_NICKNAME_SUCCESS,\r\n\tSET_USER_NICKNAME_FAILURE,\r\n\tSET_USER_NICKNAME_RESET\r\n} from \"../constants/actions\";\r\n\r\nexport const userReducer = (state = { username: \"\" }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_NICKNAME_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusername: action.payload,\r\n\t\t\t\terror: \"\"\r\n\t\t\t};\r\n\t\tcase SET_USER_NICKNAME_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\tcase SET_USER_NICKNAME_RESET:\r\n\t\t\treturn {\r\n\t\t\t\tusername: \"\",\r\n\t\t\t\terror: \"\"\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\trootElement\r\n);\r\n"],"sourceRoot":""}